version: '3'

services:

    app:
        container_name: ${DOMAIN}
        image: node:20.2.0
        expose:
            - 3000
        environment:
            NUXT_HOST: 0.0.0.0
            NUXT_PORT: 3000
            API_URL: "http://api.${DOMAIN}/api"
            VIRTUAL_HOST: ${DOMAIN}
            VIRTUAL_PORT: 3000
        volumes:
            - ${DIR_APP}:/app
        working_dir: /app
        user: node
        command: ${CMD_APP}
        depends_on:
            - api
        networks:
            - webproxy
        restart: always

    adm:
        container_name: adm.${DOMAIN}
        image: node:20.2.0
        expose:
            - 3000
        environment:
            NUXT_HOST: 0.0.0.0
            NUXT_PORT: 3000
            API_URL: "http://api.${DOMAIN}/api"
            VIRTUAL_HOST: adm.${DOMAIN}
            VIRTUAL_PORT: 3000
        volumes:
            - ${DIR_ADM}:/app
        working_dir: /app
        user: node
        command: ${CMD_ADM}
        depends_on:
            - api
        networks:
            - webproxy
        restart: always

    api:
        container_name: api.${DOMAIN}
        build:
            context: ${DIR_API}/vendor/laravel/sail/runtimes/8.2
            dockerfile: Dockerfile
            args:
                WWWGROUP: '1000'
        image: sail-8.2/app
        expose:
            - 80
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            WWWUSER: '1000'
            VIRTUAL_HOST: "api.${DOMAIN}"
            VIRTUAL_PORT: 80
            LARAVEL_SAIL: 1
            XDEBUG_MODE: 'off'
            XDEBUG_CONFIG: 'client_host=host.docker.internal'
            DB_CONNECTION: mysql
            DB_HOST: database
            DB_PORT: 3306
            DB_DATABASE: ${DB_DATABASE}
            DB_USERNAME: ${DB_USERNAME}
            DB_PASSWORD: ${DB_PASSWORD}
        volumes:
            - ${DIR_API}:/var/www/html
            - ./supervisord.conf:/etc/supervisor/conf.d/supervisord.conf:ro
        depends_on:
            - database
        restart: always
        networks:
            - db
            - webproxy

    database:
        container_name: sql.grusp.test
        image: mysql:8.0
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_ROOT_HOST: '%'
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD_ROOT}
        volumes:
            - mysql:/var/lib/mysql
        restart: always
        networks:
            - webproxy

volumes:
    mysql:

networks:
    db:
        internal: true
    webproxy:
        external: true
